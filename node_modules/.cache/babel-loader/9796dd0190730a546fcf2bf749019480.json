{"ast":null,"code":"var _jsxFileName = \"C:\\\\testproject\\\\github\\\\reactApp\\\\context-api-counter\\\\src\\\\context\\\\CounterContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CounterContext = /*#__PURE__*/createContext();\n\nconst CounterContextProvider = props => {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const incrementCount = () => {\n    setCount(count + 1);\n  };\n\n  const decrementCount = () => {\n    setCount(count - 1);\n  };\n\n  const objData = {\n    count,\n    incrementCount,\n    decrementCount\n  };\n  return /*#__PURE__*/_jsxDEV(CounterContext.Provider, {\n    value: objData,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CounterContextProvider, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n\n_c = CounterContextProvider;\nexport default CounterContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterContextProvider\");","map":{"version":3,"sources":["C:/testproject/github/reactApp/context-api-counter/src/context/CounterContext.js"],"names":["useState","createContext","CounterContext","CounterContextProvider","props","count","setCount","incrementCount","decrementCount","objData","children"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,cAAc,gBAAGD,aAAa,EAApC;;AAEP,MAAME,sBAAsB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,CAAD,CAAjC;;AAEA,QAAMO,cAAc,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH,GAFD;;AAGA,QAAMG,cAAc,GAAG,MAAM;AACzBF,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH,GAFD;;AAGA,QAAMI,OAAO,GAAG;AAAEJ,IAAAA,KAAF;AAASE,IAAAA,cAAT;AAAyBC,IAAAA;AAAzB,GAAhB;AAEF,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGC,OAAjC;AAAA,cACKL,KAAK,CAACM;AADX;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAdD;;GAAMP,sB;;KAAAA,sB;AAgBN,eAAeA,sBAAf","sourcesContent":["import { useState, createContext } from 'react';\r\n\r\nexport const CounterContext = createContext();\r\n\r\nconst CounterContextProvider = (props) => {\r\n    const [count,setCount] = useState(0);\r\n\r\n    const incrementCount = () => {\r\n        setCount(count+1);\r\n    };\r\n    const decrementCount = () => {\r\n        setCount(count-1);\r\n    };\r\n    const objData = { count, incrementCount, decrementCount };\r\n\r\n  return(<CounterContext.Provider value={ objData }>\r\n            { props.children }\r\n        </CounterContext.Provider>);\r\n}\r\n\r\nexport default CounterContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}