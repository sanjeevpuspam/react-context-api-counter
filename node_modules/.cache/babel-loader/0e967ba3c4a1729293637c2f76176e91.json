{"ast":null,"code":"import _slicedToArray from\"C:\\\\testproject\\\\github\\\\react-context-api-counter\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{useState,createContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var CounterContext=/*#__PURE__*/createContext();var CounterContextProvider=function CounterContextProvider(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var incrementCount=function incrementCount(){setCount(count+1);};var decrementCount=function decrementCount(){setCount(count-1);};var objData={count:count,incrementCount:incrementCount,decrementCount:decrementCount};return/*#__PURE__*/_jsx(CounterContext.Provider,{value:objData,children:props.children});};export default CounterContextProvider;","map":{"version":3,"sources":["C:/testproject/github/react-context-api-counter/src/context/CounterContext.js"],"names":["useState","createContext","CounterContext","CounterContextProvider","props","count","setCount","incrementCount","decrementCount","objData","children"],"mappings":"8IAAA,OAASA,QAAT,CAAmBC,aAAnB,KAAwC,OAAxC,C,2CAEA,MAAO,IAAMC,CAAAA,cAAc,cAAGD,aAAa,EAApC,CAEP,GAAME,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAW,CACtC,cAAyBJ,QAAQ,CAAC,CAAD,CAAjC,wCAAOK,KAAP,eAAaC,QAAb,eAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzBD,QAAQ,CAACD,KAAK,CAAC,CAAP,CAAR,CACH,CAFD,CAGA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzBF,QAAQ,CAACD,KAAK,CAAC,CAAP,CAAR,CACH,CAFD,CAGA,GAAMI,CAAAA,OAAO,CAAG,CAAEJ,KAAK,CAALA,KAAF,CAASE,cAAc,CAAdA,cAAT,CAAyBC,cAAc,CAAdA,cAAzB,CAAhB,CAEF,mBAAO,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAGC,OAAjC,UACKL,KAAK,CAACM,QADX,EAAP,CAGD,CAdD,CAgBA,cAAeP,CAAAA,sBAAf","sourcesContent":["import { useState, createContext } from 'react';\r\n\r\nexport const CounterContext = createContext();\r\n\r\nconst CounterContextProvider = (props) => {\r\n    const [count,setCount] = useState(0);\r\n\r\n    const incrementCount = () => {\r\n        setCount(count+1);\r\n    };\r\n    const decrementCount = () => {\r\n        setCount(count-1);\r\n    };\r\n    const objData = { count, incrementCount, decrementCount };\r\n\r\n  return(<CounterContext.Provider value={ objData }>\r\n            { props.children }\r\n        </CounterContext.Provider>);\r\n}\r\n\r\nexport default CounterContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}